<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PostSharp.Patterns.Model</name>
  </assembly>
  <members>
    <member name="T:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator"]</p>
      </summary>
    </member>
    <member name="M:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator" /> class</summary>
    </member>
    <member name="M:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator.CreateInstance(System.Type,PostSharp.Serialization.ActivatorSecurityToken)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator.CreateInstance(System.Type,PostSharp.Serialization.ActivatorSecurityToken)"]</p>
      </summary>
      <param name="type">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="type"/&gt; documentation for "M:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator.CreateInstance(System.Type,PostSharp.Serialization.ActivatorSecurityToken)"]</p>
      </param>
      <param name="securityToken">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="securityToken"/&gt; documentation for "M:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator.CreateInstance(System.Type,PostSharp.Serialization.ActivatorSecurityToken)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:PostSharp.ImplementationDetails_b821dca3.__PS___z_Activator.CreateInstance(System.Type,PostSharp.Serialization.ActivatorSecurityToken)"]</p>
      </returns>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.CreditCardAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentException" /> if the target is assigned a value that
            is not a valid credit card number. Null strings are accepted and do not
            throw an exception.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.CreditCardAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.CreditCardAttribute" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.EmailAddressAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentException" /> if the target is assigned a value that
            is not a valid email address. Null strings are accepted and do not
            throw an exception.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.EmailAddressAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.EmailAddressAttribute" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.EnumDataTypeAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentException" /> if the target is assigned a value that
            is not a valid member of an enumeration. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.EnumDataTypeAttribute.#ctor(System.Type)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.EnumDataTypeAttribute" />.
            </summary>
      <param name="enumType">Enumeration type.</param>
    </member>
    <member name="P:PostSharp.Patterns.Contracts.EnumDataTypeAttribute.EnumType">
      <summary>
            Gets the enumeration type.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.GreaterThanAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentOutOfRangeException" /> if the target is assigned a value that
            is smaller or equal to a given value.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.GreaterThanAttribute.#ctor(System.Double)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify a floating-point bound.
            </summary>
      <param name="min">The lower bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.GreaterThanAttribute.#ctor(System.Int64)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify an integer bound.
            </summary>
      <param name="min">The lower bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.GreaterThanAttribute.#ctor(System.UInt64)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify a <see cref="T:System.UInt64" /> bound.
            </summary>
      <param name="min">The lower bound.</param>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.LessThanAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentOutOfRangeException" /> if the target is assigned a value that
            is greater or equal to a given value.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.LessThanAttribute.#ctor(System.Double)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify a floating-point bound.
            </summary>
      <param name="max">The upper bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.LessThanAttribute.#ctor(System.Int64)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify an integer bound.
            </summary>
      <param name="max">The upper bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.LessThanAttribute.#ctor(System.UInt64)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify a <see cref="T:System.UInt64" /> bound.
            </summary>
      <param name="max">The upper bound.</param>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.LocationContractAttribute">
      <summary>
            Base class for other custom attributes in this namespace.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.LocationContractAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.LocationContractAttribute" />.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.LocationContractAttribute.CreateArgumentException(System.Object,System.String,PostSharp.Reflection.LocationKind)">
      <summary>
            Creates an <see cref="T:System.ArgumentException" /> with an error message formatted from <see cref="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage" /> and
            given concrete values.
            </summary>
      <param name="value">Value assigned to the property.</param>
      <param name="locationName">Name of the location.</param>
      <param name="locationKind">Location kind.</param>
      <returns>A new <see cref="T:System.ArgumentException" />  where the message, has been derived from <see cref="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage" />, with placeholders replaced by their concrete value. </returns>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.LocationContractAttribute.CreateArgumentNullException(System.Object,System.String,PostSharp.Reflection.LocationKind)">
      <summary>
            Creates an <see cref="T:System.ArgumentNullException" /> with an error message formatted from <see cref="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage" /> and
            given concrete values.
            </summary>
      <param name="value">Value assigned to the property.</param>
      <param name="locationName">Name of the location.</param>
      <param name="locationKind">Location kind.</param>
      <returns>A new <see cref="T:System.ArgumentNullException" />  where the message, has been derived from <see cref="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage" />, with placeholders replaced by their concrete value. </returns>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.LocationContractAttribute.CreateArgumentOutOfRangeException(System.Object,System.String,PostSharp.Reflection.LocationKind)">
      <summary>
            Creates an <see cref="T:System.ArgumentOutOfRangeException" /> with an error message formatted from <see cref="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage" /> and
            given concrete values.
            </summary>
      <param name="value">Value assigned to the property.</param>
      <param name="locationName">Name of the location.</param>
      <param name="locationKind">Location kind.</param>
      <returns>A new <see cref="T:System.ArgumentOutOfRangeException" />  where the message, has been derived from <see cref="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage" />, with placeholders replaced by their concrete value. </returns>
    </member>
    <member name="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage">
      <summary>
            Gets or sets the error message formatting string.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.LocationContractAttribute.FormatErrorMessage(System.Object,System.String,PostSharp.Reflection.LocationKind)">
      <summary>
            Formats the <see cref="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage" /> with concrete values.
            </summary>
      <param name="value">Value assigned to the property.</param>
      <param name="locationName">Name of the location.</param>
      <param name="locationKind">Location kind.</param>
      <returns>A string derived from <see cref="P:PostSharp.Patterns.Contracts.LocationContractAttribute.ErrorMessage" />, where placeholders have been
            replaced by their concrete value. </returns>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.NotEmptyAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentNullException" /> if the target is assigned a null or empty value.
            The custom attributes can be added to locations of type <see cref="T:System.String" /> (where empty
            means zero character) or <see cref="T:System.Collections.ICollection" /> (where empty means zero item). 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.NotEmptyAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.NotEmptyAttribute" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.NotNullAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentNullException" /> if the target is assigned a null value.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.NotNullAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:System.ArgumentNullException" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.PhoneAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentException" /> if the target is assigned a value that
            is not a valid phone number. Null strings are accepted and do not
            throw an exception.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.PhoneAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.PhoneAttribute" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.PositiveAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentOutOfRangeException" /> if the target is assigned a value that
            smaller than zero.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.PositiveAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.PositiveAttribute" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.RangeAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentOutOfRangeException" /> if the target is assigned a value that
            is outside a given range.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.RangeAttribute.#ctor(System.Decimal,System.Decimal)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify a <see cref="T:System.Decimal" /> bound.
            </summary>
      <param name="min">The lower bound.</param>
      <param name="max">The upper bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.RangeAttribute.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify a floating-point bound.
            </summary>
      <param name="min">The lower bound.</param>
      <param name="max">The upper bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.RangeAttribute.#ctor(System.Int64,System.Int64)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify an integer bound.
            </summary>
      <param name="min">The lower bound.</param>
      <param name="max">The upper bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.RangeAttribute.#ctor(System.UInt64,System.UInt64)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.GreaterThanAttribute" /> and specify a <see cref="T:System.UInt64" /> bound.
            </summary>
      <param name="min">The lower bound.</param>
      <param name="max">The upper bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.RangeAttribute.CompileTimeValidate(System.Object)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.Patterns.Contracts.RangeAttribute.CompileTimeValidate(System.Object)"]</p>
      </summary>
      <param name="target">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="target"/&gt; documentation for "M:PostSharp.Patterns.Contracts.RangeAttribute.CompileTimeValidate(System.Object)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:PostSharp.Patterns.Contracts.RangeAttribute.CompileTimeValidate(System.Object)"]</p>
      </returns>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.RegularExpressionAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentException" /> if the target is assigned a value that
            does not match a given regular expression. Null strings are accepted and do not
            throw an exception.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.RegularExpressionAttribute.#ctor(System.String)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.RegularExpressionAttribute" />.
            </summary>
      <param name="pattern">The regular expression.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.RegularExpressionAttribute.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.RegularExpressionAttribute" /> and specify options.
            </summary>
      <param name="pattern">The regular expression.</param>
      <param name="options">Options.</param>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.RequiredAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentNullException" /> if the target is assigned a null value or an empty or white-space string.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.RequiredAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.RequiredAttribute" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentOutOfRangeException" /> if the target is assigned a value that
            is strictly smaller than a given value.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute.#ctor(System.Decimal)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute" /> and specifies a floating-point bound.
            </summary>
      <param name="min">The lower bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute.#ctor(System.Double)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute" /> and specifies a floating-point bound.
            </summary>
      <param name="min">The lower bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute.#ctor(System.Int64)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute" /> and specify an integer bound.
            </summary>
      <param name="min">The lower bound.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute.#ctor(System.UInt64)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.StrictlyGreaterThanAttribute" /> and specifies a <see cref="T:System.UInt64" /> bound.
            </summary>
      <param name="min">The lower bound.</param>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.StrictlyPositiveAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentOutOfRangeException" /> if the target is assigned a value that
            smaller than zero.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.StrictlyPositiveAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.StrictlyPositiveAttribute" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.StringLengthAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentException" /> if the target is assigned a string of invalid length.
            Null strings are accepted and do not throw an exception.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.StringLengthAttribute.#ctor(System.Int32)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.StringLengthAttribute" /> and specifies the maximum length.
            </summary>
      <param name="maximumLength">Maximum length.</param>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.StringLengthAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.StringLengthAttribute" /> and specifies the maximum  length
            and the minimum length.
            </summary>
      <param name="maximumLength">Maximum length.</param>
      <param name="minimumLength">Minimum length.</param>
    </member>
    <member name="P:PostSharp.Patterns.Contracts.StringLengthAttribute.MaximumLength">
      <summary>
            Gets the maximum length.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Contracts.StringLengthAttribute.MinimumLength">
      <summary>
            Gets the minimum length.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Contracts.UrlAttribute">
      <summary>
            Custom attribute that, when added to a field, property or parameter, throws
            an <see cref="T:System.ArgumentException" /> if the target is assigned a value that
            is not a valid URL starting with <c>http://</c>, <c>https://</c> or <c>ftp://</c>.
             Null strings are accepted and do not
            throw an exception.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Contracts.UrlAttribute.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Contracts.UrlAttribute" />.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Model.Depends">
      <summary>
            Provides a way to specify dependencies of a method to properties or chains of properties. This class
            should be used from methods marked with the <see cref="T:PostSharp.Patterns.Model.SafeForDependencyAnalysisAttribute" /> custom attribute.
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Model.Depends.Guard">
      <summary>
            A <see cref="T:System.Boolean" /> value that is always <c>false</c>.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the argument passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency3">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency3"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency3">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency3"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency4">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency4"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency3">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency3"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency4">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency4"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency5">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency5"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency3">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency3"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency4">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency4"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency5">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency5"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency6">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency6"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency3">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency3"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency4">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency4"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency5">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency5"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency6">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency6"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency7">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency7"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency3">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency3"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency4">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency4"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency5">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency5"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency6">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency6"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency7">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency7"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency8">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency8"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency3">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency3"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency4">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency4"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency5">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency5"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency6">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency6"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency7">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency7"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency8">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency8"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency9">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency9"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            Specifies an explicit dependency between the calling method and the arguments passed to this method.
            </summary>
      <param name="dependency1">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency1"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency2">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency2"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency3">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency3"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency4">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency4"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency5">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency5"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency6">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency6"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency7">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency7"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency8">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency8"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency9">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency9"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
      <param name="dependency10">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dependency10"/&gt; documentation for "M:PostSharp.Patterns.Model.Depends.On(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Model.DisposableAttribute">
      <summary>
            Custom attribute that, when applied to a class, implements the <see cref="T:System.IDisposable" /> in such a way that
            the <see cref="M:System.IDisposable.Dispose" /> method executes the <see cref="M:System.IDisposable.Dispose" /> method for all
            children objects that also implement the <see cref="T:System.IDisposable" /> interface.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.DisposableAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.DisposableAttribute" /> class</summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.DisposableAttribute.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.DisposableAttribute" /> class</summary>
      <param name="context">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="context"/&gt; documentation for "M:PostSharp.Patterns.Model.DisposableAttribute.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.DisposableAttribute.Advise(System.Object)">
      <summary>
            Injects the advice into the child object.
            </summary>
      <param name="obj">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="obj"/&gt; documentation for "M:PostSharp.Patterns.Model.DisposableAttribute.Advise(System.Object)"]</p>
      </param>
      <returns>
        <c>true</c> if the children of <paramref name="obj" /> have to be advised as well, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Model.DisposableAttribute.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.DisposableAttribute.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:PostSharp.Patterns.Model.DisposableAttribute" /> and optionally releases the managed resources</summary>
      <param name="disposing">True to release both managed and unmanaged resources; false to release only unmanaged resources</param>
    </member>
    <member name="M:PostSharp.Patterns.Model.DisposableAttribute.IsEligibleChild(System.Object,PostSharp.Patterns.Model.ChildInfo)">
      <summary>
            Determines if an object is eligible to be a child of the target instance of the current aspect.
            </summary>
      <param name="child">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="child"/&gt; documentation for "M:PostSharp.Patterns.Model.DisposableAttribute.IsEligibleChild(System.Object,PostSharp.Patterns.Model.ChildInfo)"]</p>
      </param>
      <param name="childInfo">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="childInfo"/&gt; documentation for "M:PostSharp.Patterns.Model.DisposableAttribute.IsEligibleChild(System.Object,PostSharp.Patterns.Model.ChildInfo)"]</p>
      </param>
      <returns>
        <c>true</c> if <paramref name="child" /> is eligible to be a child without injecting any advice, otherwise <c>false</c>. When this method returns <c>false</c>,
            the aspect will the invoke the <see cref="M:PostSharp.Patterns.Model.AggregatableClientAttribute.Advise(System.Object)" /> method. </returns>
    </member>
    <member name="P:PostSharp.Patterns.Model.DisposableAttribute.ThrowObjectDisposedException">
      <summary>
            Determines whether an <see cref="T:System.ObjectDisposedException" /> should be thrown when an attempt is made
            to access an object that has already been disposed.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Model.IgnoreAutoChangeNotificationAttribute">
      <summary>
            Custom attribute that, when applied to a method, prevents the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> aspect
            to raise change notifications for this property.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.IgnoreAutoChangeNotificationAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.IgnoreAutoChangeNotificationAttribute" /> class</summary>
    </member>
    <member name="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute">
      <summary>
            Custom attribute that, when applied on a type, implements the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface for this class and all children classes.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> class that stores strong references to the client delegates.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> class</summary>
      <param name="context">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="context"/&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> class and specifies whether the <see cref="N:PostSharp.Patterns.Model.NotifyPropertyChanged" /> event should hold a weak or strong reference to
            to the client delegates.
            </summary>
      <param name="holdWeakReference">
        <c>true</c> if the <see cref="N:PostSharp.Patterns.Model.NotifyPropertyChanged" /> event should hold a <see cref="T:System.WeakReference" />
            to the client delegates, <c>false</c> if the event should hold a normal reference.
            </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CompileTimeInitialize(System.Type,PostSharp.Aspects.AspectInfo)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CompileTimeInitialize(System.Type,PostSharp.Aspects.AspectInfo)"]</p>
      </summary>
      <param name="type">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="type"/&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CompileTimeInitialize(System.Type,PostSharp.Aspects.AspectInfo)"]</p>
      </param>
      <param name="aspectInfo">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="aspectInfo"/&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CompileTimeInitialize(System.Type,PostSharp.Aspects.AspectInfo)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CompileTimeValidate(System.Type)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CompileTimeValidate(System.Type)"]</p>
      </summary>
      <param name="type">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="type"/&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CompileTimeValidate(System.Type)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CompileTimeValidate(System.Type)"]</p>
      </returns>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CreateInstance(PostSharp.Aspects.AdviceArgs)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CreateInstance(PostSharp.Aspects.AdviceArgs)"]</p>
      </summary>
      <param name="adviceArgs">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="adviceArgs"/&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CreateInstance(PostSharp.Aspects.AdviceArgs)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.CreateInstance(PostSharp.Aspects.AdviceArgs)"]</p>
      </returns>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.OnCloned(PostSharp.Aspects.ICloneAwareAspect)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.OnCloned(PostSharp.Aspects.ICloneAwareAspect)"]</p>
      </summary>
      <param name="source">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="source"/&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.OnCloned(PostSharp.Aspects.ICloneAwareAspect)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.RuntimeInitialize(System.Type)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.RuntimeInitialize(System.Type)"]</p>
      </summary>
      <param name="type">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="type"/&gt; documentation for "M:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute.RuntimeInitialize(System.Type)"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttributeTargetClass">
      <summary>
            Describes the members that are consumed by the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> aspect.
            You can define one or many of these members in classes that are the target of <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> to customize the behavior
            of the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> aspect.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttributeTargetClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttributeTargetClass" /> class</summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedAttributeTargetClass.OnPropertyChanged(System.String)">
      <summary>
            Raises the <see cref="E:PostSharp.Patterns.Model.NotifyPropertyChangedAttributeTargetClass.PropertyChanged" /> event. If this method is already present in the target code, the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" />
            aspect will use it to raise the <see cref="E:PostSharp.Patterns.Model.NotifyPropertyChangedAttributeTargetClass.PropertyChanged" /> event. Otherwise, the aspect will introduce the method into the target class.
            </summary>
      <param name="propertyName">Name of the changed property. The <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> aspect never
            passes <c>null</c> to this parameter.</param>
    </member>
    <member name="E:PostSharp.Patterns.Model.NotifyPropertyChangedAttributeTargetClass.PropertyChanged">
      <summary>
            Event raised when a property has changed. This event is introduced by the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> aspect
            unless it is already present in the target class. 
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Model.NotifyPropertyChangedOverflowException">
      <summary>
            Exception thrown at runtime when the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> aspect encounters
            an excessively long chain is dependency. This situation is typically caused by a cyclic dependency.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedOverflowException.#ctor">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedOverflowException" />.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedOverflowException.#ctor(System.String)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedOverflowException" /> and sets the exception message.
            </summary>
      <param name="message">Exception message.</param>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedOverflowException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedOverflowException" /> and sets the exception message and the inner exception.
            </summary>
      <param name="message">Exception message.</param>
      <param name="innerException">Inner exception.</param>
    </member>
    <member name="T:PostSharp.Patterns.Model.NotifyPropertyChangedServices">
      <summary>
            Utility methods to work with the <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> aspect.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedServices.RaiseEventsImmediate(System.Object)">
      <summary>
            Raises all <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> events that are currently stored in the event buffer for the current thread
            and a given object.
            </summary>
      <param name="instance">The object for which events should be raised.</param>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedServices.ResumeEvents">
      <summary>
            Resumes the raising of <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> events for the current thread after it has been
            suspending by the <see cref="M:PostSharp.Patterns.Model.NotifyPropertyChangedServices.SuspendEvents" /> method.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.NotifyPropertyChangedServices.SuspendEvents">
      <summary>
            Suspends the raising of <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> events for the current thread.
            </summary>
      <returns>
        <c>true</c> if events were suspended as a result of the current method call, <c>false</c> if events were already suspended before.</returns>
    </member>
    <member name="T:PostSharp.Patterns.Model.PropertyPath">
      <summary>
            Immutable property path with all components interned.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.PropertyPath.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.PropertyPath" /> class</summary>
      <param name="context">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="context"/&gt; documentation for "M:PostSharp.Patterns.Model.PropertyPath.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)"]</p>
      </param>
    </member>
    <member name="M:PostSharp.Patterns.Model.PropertyPath.Equals(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</summary>
      <param name="obj">The object to compare with the current object. </param>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Model.PropertyPath.GetHashCode">
      <summary>Serves as a hash function for a particular type. </summary>
      <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Model.PropertyPath.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:PostSharp.Patterns.Model.PureAttribute">
      <summary>
            Custom attribute that, when applied on a method, specifies that this method is a pure function, i.e. the method always
            returns the same result given the same parameter values. In the context of <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" />,
            it is also assumed that pure functions have only parameters of primitive types (<see cref="T:System.Int32" />, <see cref="T:System.String" />, ...).
            The <see cref="T:System.Object" /> parameter type is also accepted, but then it is assumed that instances passed are immutable
            (and changes to these objects will not be tracked).
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.PureAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.PureAttribute" /> class</summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.PureAttribute.CompileTimeValidate(System.Object)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.Patterns.Model.PureAttribute.CompileTimeValidate(System.Object)"]</p>
      </summary>
      <param name="target">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="target"/&gt; documentation for "M:PostSharp.Patterns.Model.PureAttribute.CompileTimeValidate(System.Object)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:PostSharp.Patterns.Model.PureAttribute.CompileTimeValidate(System.Object)"]</p>
      </returns>
    </member>
    <member name="T:PostSharp.Patterns.Model.SafeForDependencyAnalysisAttribute">
      <summary>
            Custom attribute that, when applied on a property, prevents the dependency analysis algorithm used by the
            <see cref="T:PostSharp.Patterns.Model.NotifyPropertyChangedAttribute" /> aspect from emitting errors when it encounters constructs
            that it cannot analyze. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Model.SafeForDependencyAnalysisAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Model.SafeForDependencyAnalysisAttribute" /> class</summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.EditableObjectAttribute">
      <summary>
            Custom attribute that, when applied to a class, implements <see cref="T:System.ComponentModel.IEditableObject" /> into this class.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.EditableObjectAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.EditableObjectAttribute" /> class</summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.EditableObjectAttribute.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.EditableObjectAttribute" /> class</summary>
      <param name="context">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="context"/&gt; documentation for "M:PostSharp.Patterns.Recording.EditableObjectAttribute.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.IRecordable">
      <summary>
            Interface implemented by the <see cref="T:PostSharp.Patterns.Recording.RecordableAttribute" /> aspect.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.IRecordable.HasRecorder(System.Boolean)">
      <summary>
            Determines whether the current object is attached to a <see cref="T:PostSharp.Patterns.Recording.Recorder" />, if not,
            optionally attaches the object to the default <see cref="T:PostSharp.Patterns.Recording.Recorder" />.
            </summary>
      <param name="autoAttach">
        <c>true</c> if the current object should be automatically attached to the default <see cref="P:PostSharp.Patterns.Recording.IRecordable.Recorder" />
            if it is not yet attached, otherwise <c>false</c>.</param>
      <returns>
        <c>true</c> if the object is already attached to a <see cref="T:PostSharp.Patterns.Recording.Recorder" /> or if <paramref name="autoAttach" /> is <c>true</c>, otherwise <c>false</c>.</returns>
    </member>
    <member name="P:PostSharp.Patterns.Recording.IRecordable.Recorder">
      <summary>
            Gets the recorder attached to the current object.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.IRecordableCallback">
      <summary>
            Defines callback methods that are invoked when a recordable object is involved in an undo or redo operation.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.IRecordableCallback.OnReplayed(PostSharp.Patterns.Recording.ReplayKind,PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Method invoked after the undo or redo operation has started.
            </summary>
      <param name="kind">
        <see cref="F:PostSharp.Patterns.Recording.ReplayKind.Undo" /> or <see cref="F:PostSharp.Patterns.Recording.ReplayKind.Redo" />.</param>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.IRecordableCallback.OnReplaying(PostSharp.Patterns.Recording.ReplayKind,PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Method invoked before the undo or redo operation has started.
            </summary>
      <param name="kind">
        <see cref="F:PostSharp.Patterns.Recording.ReplayKind.Undo" /> or <see cref="F:PostSharp.Patterns.Recording.ReplayKind.Redo" />.</param>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.MergeStatus">
      <summary>
            Enumeration of possible return values for the <see cref="M:PostSharp.Patterns.Recording.Operation.GetMergeStatus(PostSharp.Patterns.Recording.Operation)" /> method.
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.MergeStatus.None">
      <summary>
            The subsequent <see cref="T:PostSharp.Patterns.Recording.Operation" /> cannot be merged and is not commutative with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.MergeStatus.Mergeable">
      <summary>
            The subsequent <see cref="T:PostSharp.Patterns.Recording.Operation" /> can be merged into the current <see cref="T:PostSharp.Patterns.Recording.Operation" /> (for instance, two subsequent changes to the same field).
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.MergeStatus.Commutative">
      <summary>
            The subsequent <see cref="T:PostSharp.Patterns.Recording.Operation" /> cannot be merged into the current <see cref="T:PostSharp.Patterns.Recording.Operation" />, but both operations are commutative
            (for instance, two subsequent changes to different fields).
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.NotRecordedAttribute">
      <summary>
            Custom attribute that, when applied to field or property, specifies that it should not be affected by the <see cref="T:PostSharp.Patterns.Recording.RecordableAttribute" /> aspect.
            Therefore, changes to this field or property will not be recorded into a <see cref="T:PostSharp.Patterns.Recording.Recorder" />, and will not be affected
            by undo/redo operations.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.NotRecordedAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.NotRecordedAttribute" /> class</summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operation">
      <summary>
            Base class for all operations. An operation is any change of state that can be appended to a <see cref="T:PostSharp.Patterns.Recording.Recorder" />
            and be therefore involved in an undo/redo operation.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.Operation" /> class.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operation.GetMergeStatus(PostSharp.Patterns.Recording.Operation)">
      <summary>
            Determines how a given <see cref="T:PostSharp.Patterns.Recording.Operation" /> can be merged with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="subsequent">The subsequent <see cref="T:PostSharp.Patterns.Recording.Operation" /> to be merged with the current one.</param>
      <returns>A <see cref="T:PostSharp.Patterns.Recording.MergeStatus" />.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operation.Merge(PostSharp.Patterns.Recording.Operation)">
      <summary>
            Merges a given <see cref="T:PostSharp.Patterns.Recording.Operation" /> into the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="subsequent">The <see cref="T:PostSharp.Patterns.Recording.Operation" /> to merge into the current one.</param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operation.Name">
      <summary>
            Gets the operation name.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operation.OperationDescriptor">
      <summary>
            Gets the <see cref="T:PostSharp.Patterns.Recording.Operations.IOperationDescriptor" />, which is used by the <see cref="T:PostSharp.Patterns.Recording.OperationFormatter" /> to produce a human-readable description
            of the current operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operation.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operation.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operation.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operation.VisitAffectedObjects(System.Action{System.Object})">
      <summary>
            Executes a given action on all recordable objects involved with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:PostSharp.Patterns.Recording.Operation.VisitAffectedObjects(System.Action{System.Object})"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.OperationCollection">
      <summary>
            Read-only collection of operations (<see cref="T:PostSharp.Patterns.Recording.Operation" />). The class is exposed on the <see cref="P:PostSharp.Patterns.Recording.Recorder.UndoOperations" />
            and <see cref="P:PostSharp.Patterns.Recording.Recorder.RedoOperations" /> properties.
            </summary>
    </member>
    <member name="E:PostSharp.Patterns.Recording.OperationCollection.CollectionChanged">
      <summary>Occurs when the collection changes.</summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.OperationCollection.CopyTo(PostSharp.Patterns.Recording.Operation[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="arrayIndex">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</exception>
    </member>
    <member name="P:PostSharp.Patterns.Recording.OperationCollection.Count">
      <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Recording.OperationCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:PostSharp.Patterns.Recording.OperationCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="E:PostSharp.Patterns.Recording.OperationCollection.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.OperationCollection.Trim(PostSharp.Patterns.Recording.RestorePoint)">
      <summary>
            Trims the current collection to a specified <see cref="T:PostSharp.Patterns.Recording.RestorePoint" />.
            </summary>
      <param name="restorePoint">A token to the <see cref="T:PostSharp.Patterns.Recording.RestorePoint" /> to which the current collection should be trimmed.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.OperationCollection.Trim(System.Int32)">
      <summary>
            Trims the current collection to a given maximal number of operations.
            </summary>
      <param name="count">The maximal number of operations to keep in the collection.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.OperationFormatter">
      <summary>
            Base class for all operation formatters, which provide a human-readable description of operations (<see cref="T:PostSharp.Patterns.Recording.Operation" />).
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.OperationFormatter.#ctor(PostSharp.Patterns.Recording.OperationFormatter)">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.OperationFormatter" /> class.
            </summary>
      <param name="next">The next instance in the chain of responsibility.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.OperationFormatter.FormatOperation(PostSharp.Patterns.Recording.Operation)">
      <summary>
            Gets a human-readable description of an <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="operation">The <see cref="T:PostSharp.Patterns.Recording.Operation" />.</param>
      <returns>A human-readable description of the <see cref="T:PostSharp.Patterns.Recording.Operation" />.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Recording.OperationFormatter.FormatOperationDescriptor(PostSharp.Patterns.Recording.Operations.IOperationDescriptor)">
      <summary>
            Gets a human-readable description of an <see cref="T:PostSharp.Patterns.Recording.Operation" /> given its <see cref="T:PostSharp.Patterns.Recording.Operations.IOperationDescriptor" />.
            </summary>
      <param name="operation">The operation descriptor.</param>
      <returns>A human-readable description for <paramref name="operation" />, or <c>null</c> if the current <see cref="T:PostSharp.Patterns.Recording.OperationFormatter" /> does not know
            how to format <paramref name="operation" />, in which case the next <see cref="T:PostSharp.Patterns.Recording.OperationFormatter" /> in the chain of responsibility will be invoked.</returns>
    </member>
    <member name="T:PostSharp.Patterns.Recording.OperationKind">
      <summary>
            Enumeration of different kinds of <see cref="T:PostSharp.Patterns.Recording.Operation" /></summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.AttachRecorderToObject">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.AttachObjectToRecorderOperation" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.ClearCollection">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.ClearCollectionOperation`1" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.Composite">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.CompositeOperation" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.DetachRecorderFromObject">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.DetachObjectFromRecorderOperation" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.Field">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.FieldOperation`1" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.InsertCollectionItem">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.AddCollectionItemOperation`1" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.RemoveCollectionItem">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.RemoveCollectionItemOperation`1" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.SetCollectionItem">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.RestorePoint">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.RestorePoint" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.Method">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.Named">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.NamedOperationDescriptor" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.InsertDictionaryItem">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.AddDictionaryItemOperation`2" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.RemoveDictionaryItem">
      <summary>
        <seealso cref="T:PostSharp.Patterns.Recording.Operations.RemoveDictionaryItemOperation`2" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.SetDictionaryItem">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.SetDictionaryItemOperation`2" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.ClearDictionary">
      <summary>
        <see cref="T:PostSharp.Patterns.Recording.Operations.ClearDictionaryOperation`2" />
      </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.OperationKind.Other">
      <summary>
            User-defined operation. Any value higher than <see cref="F:PostSharp.Patterns.Recording.OperationKind.Other" /> is acceptable.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.RecordableAttribute">
      <summary>
            Custom attribute that, when applied to a class, instruments fields and methods of this class so
            that it can be involved in undo/redo operations.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecordableAttribute.#ctor">
      <summary>
            Initializes a new instance of the <seealso cref="T:PostSharp.Patterns.Recording.RecordableAttribute" /> class.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecordableAttribute.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)">
      <summary>Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.RecordableAttribute" /> class</summary>
      <param name="context">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="context"/&gt; documentation for "M:PostSharp.Patterns.Recording.RecordableAttribute.#ctor(PostSharp.Serialization.PortableFormatterConstructorContext)"]</p>
      </param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RecordableAttribute.AutoRecord">
      <summary>
            Determines whether changes in this object must be recorded as soon as the object constructor has completed.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecordableAttribute.CompileTimeInitialize(System.Type,PostSharp.Aspects.AspectInfo)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:PostSharp.Patterns.Recording.RecordableAttribute.CompileTimeInitialize(System.Type,PostSharp.Aspects.AspectInfo)"]</p>
      </summary>
      <param name="type">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="type"/&gt; documentation for "M:PostSharp.Patterns.Recording.RecordableAttribute.CompileTimeInitialize(System.Type,PostSharp.Aspects.AspectInfo)"]</p>
      </param>
      <param name="aspectInfo">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="aspectInfo"/&gt; documentation for "M:PostSharp.Patterns.Recording.RecordableAttribute.CompileTimeInitialize(System.Type,PostSharp.Aspects.AspectInfo)"]</p>
      </param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RecordableAttribute.ProvideMethodContext">
      <summary>
            Determines whether full method invocation context is provided to the <see cref="T:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor" /> class
            for use in a custom <see cref="T:PostSharp.Patterns.Recording.OperationFormatter" />. This property is set to <c>false</c> by default for performance reasons.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Recorder">
      <summary>
            Records changed done on an object model and allow to undo and redo them.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.Recorder" /> class.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.Recorder" /> class and attaches it to a given object.
            </summary>
      <param name="owner">The object to which the new <see cref="T:PostSharp.Patterns.Recording.Recorder" /> should be attached.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.AddOperation(PostSharp.Patterns.Recording.Operation)">
      <summary>
            Adds a new <see cref="T:PostSharp.Patterns.Recording.Operation" /> to <see cref="P:PostSharp.Patterns.Recording.Recorder.UndoOperations" /> collection of the current <see cref="T:PostSharp.Patterns.Recording.Recorder" />.
            </summary>
      <param name="operation">The operation.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.AddRestorePoint(System.String)">
      <summary>
            Adds new restore point with given name.
            </summary>
      <param name="name">The name of the restore point, or <c>null</c> to create an unnamed restore point.</param>
      <returns>The newly created <see cref="T:PostSharp.Patterns.Recording.RestorePoint" />.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.Attach(System.Object)">
      <summary>
            Attaches a recordable object (including its descendant objects) to the current <see cref="T:PostSharp.Patterns.Recording.Recorder" /> so that changes in
            this objects start being recorded into the current <see cref="T:PostSharp.Patterns.Recording.Recorder" />.
            </summary>
      <param name="obj">The recordable object whose changes need to be recorded into the current <see cref="T:PostSharp.Patterns.Recording.Recorder" />.</param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Recorder.CanAddRestorePoint">
      <summary>
            Determines if the <see cref="M:PostSharp.Patterns.Recording.Recorder.AddRestorePoint(System.String)" /> method can be invoked.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Recorder.CanRedo">
      <summary>
            Determines if the <see cref="M:PostSharp.Patterns.Recording.Recorder.Redo" /> method can be invoked.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Recorder.CanUndo">
      <summary>
            Determines if the <see cref="M:PostSharp.Patterns.Recording.Recorder.Undo" /> method can be invoked.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.Clear">
      <summary>
            Clears undo and redo lists.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.Detach(System.Object)">
      <summary>
            Detaches a recordable object from the current <see cref="T:PostSharp.Patterns.Recording.Recorder" />, so that changes in
            this objects stop being recorded into the current <see cref="T:PostSharp.Patterns.Recording.Recorder" />.
            </summary>
      <param name="obj">The recordable object whose changes no longer need to be recorded into the current <see cref="T:PostSharp.Patterns.Recording.Recorder" />.</param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Recorder.MaximumOperationsCount">
      <summary>
            Gets the maximum number of operations in the <see cref="P:PostSharp.Patterns.Recording.Recorder.UndoOperations" /> and <see cref="P:PostSharp.Patterns.Recording.Recorder.RedoOperations" /> collections. 
            These collections are automatically trimmed so that their size never exceeds <see cref="P:PostSharp.Patterns.Recording.Recorder.MaximumOperationsCount" />.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.OpenScope(PostSharp.Patterns.Recording.RecordingScopeOption)">
      <summary>
            Opens an unnamed <see cref="T:PostSharp.Patterns.Recording.RecordingScope" />.
            </summary>
      <param name="option">Scope options. Specify this parameter if you want the scope to be <see cref="F:PostSharp.Patterns.Recording.RecordingScopeOption.Atomic" />.</param>
      <returns>A <see cref="T:PostSharp.Patterns.Recording.RecordingScope" /> object, which should be closed using <see cref="M:PostSharp.Patterns.Recording.RecordingScope.Complete" />
            or <see cref="M:PostSharp.Patterns.Recording.RecordingScope.Dispose" />.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.OpenScope(System.String,PostSharp.Patterns.Recording.RecordingScopeOption)">
      <summary>
            Opens a <see cref="T:PostSharp.Patterns.Recording.RecordingScope" /> with a given name.
            </summary>
      <param name="name">The scope name, or <c>null</c> to create an unnamed scope.</param>
      <param name="option">Scope options. Specify this parameter if you want the scope to be <see cref="F:PostSharp.Patterns.Recording.RecordingScopeOption.Atomic" />.</param>
      <returns>A <see cref="T:PostSharp.Patterns.Recording.RecordingScope" /> object, which should be closed using <see cref="M:PostSharp.Patterns.Recording.RecordingScope.Complete" />
            or <see cref="M:PostSharp.Patterns.Recording.RecordingScope.Dispose" />.</returns>
    </member>
    <member name="E:PostSharp.Patterns.Recording.Recorder.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.Redo">
      <summary>
            Redo last operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Recorder.RedoOperations">
      <summary>
            Gets the collection of operations that can be redone using the <see cref="M:PostSharp.Patterns.Recording.Recorder.Redo" /> method.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.RedoTo(PostSharp.Patterns.Recording.Operation)">
      <summary>
            redo all operation to specific operation.
            </summary>
      <param name="operation">the operation.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.Undo">
      <summary>
            Undo last operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Recorder.UndoOperations">
      <summary>
            Gets the collection of operations that can be undone using the <see cref="M:PostSharp.Patterns.Recording.Recorder.Undo" /> method.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Recorder.UndoTo(PostSharp.Patterns.Recording.Operation)">
      <summary>
            Undo all operations to specific <see cref="T:PostSharp.Patterns.Recording.Operation" /> or <see cref="T:PostSharp.Patterns.Recording.RestorePoint" />.
            </summary>
      <param name="operation">the operation.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.RecorderProvider">
      <summary>
            Abstract class that represents a node in the chain of responsibility, starting at the <see cref="P:PostSharp.Patterns.Recording.RecordingServices.RecorderProvider" /> property,
            whose role is to provide a default <see cref="T:PostSharp.Patterns.Recording.Recorder" /> to recordable objects.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecorderProvider.#ctor(PostSharp.Patterns.Recording.RecorderProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.RecorderProvider" /> class.
            </summary>
      <param name="next">Next instance in the chain of responsibility.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecorderProvider.GetRecorder(System.Object)">
      <summary>
            Gets the default <see cref="T:PostSharp.Patterns.Recording.Recorder" /> for a given object. This method goes through the whole chain of responsibility.
            </summary>
      <param name="obj">The object for which the default <see cref="T:PostSharp.Patterns.Recording.Recorder" /> is required, or <c>null</c>
            if the global default provider (exposed for convenience on the <see cref="P:PostSharp.Patterns.Recording.RecordingServices.DefaultRecorder" />) property
            if required.
            </param>
      <returns>The <see cref="T:PostSharp.Patterns.Recording.Recorder" /> for <paramref name="obj" />, or <c>null</c> if no <see cref="T:PostSharp.Patterns.Recording.RecorderProvider" /> in the chain of responsibility
            knows how to provide a <see cref="T:PostSharp.Patterns.Recording.Recorder" /> for <paramref name="obj" />.</returns>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecorderProvider.GetRecorderCore(System.Object)">
      <summary>
            Gets the default <see cref="T:PostSharp.Patterns.Recording.Recorder" /> for a given object.
            </summary>
      <param name="obj">The object for which the default <see cref="T:PostSharp.Patterns.Recording.Recorder" /> is required, or <c>null</c>
            if the global default provider (exposed for convenience on the <see cref="P:PostSharp.Patterns.Recording.RecordingServices.DefaultRecorder" />) property
            if required.
            </param>
      <returns>The <see cref="T:PostSharp.Patterns.Recording.Recorder" /> for <paramref name="obj" />, or <c>null</c> if the current <see cref="T:PostSharp.Patterns.Recording.RecorderProvider" /> does not know
            how to provide a <see cref="T:PostSharp.Patterns.Recording.Recorder" /> for <paramref name="obj" />, in which case the caller shall invoke the next <see cref="T:PostSharp.Patterns.Recording.RecorderProvider" />
            in the chain of responsibility.</returns>
    </member>
    <member name="T:PostSharp.Patterns.Recording.RecordingScope">
      <summary>
            Defines the scope a logical operation, that is, a set of change that should be undone or redone as a whole.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecordingScope.Complete">
      <summary>
            Closes the current <see cref="T:PostSharp.Patterns.Recording.RecordingScope" /> and mark it as successful.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecordingScope.Dispose">
      <summary>
            Closes the current <see cref="T:PostSharp.Patterns.Recording.RecordingScope" />.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RecordingScope.OperationDescriptor">
      <summary>
            Gets or sets the <see cref="T:PostSharp.Patterns.Recording.Operations.IOperationDescriptor" /> for the current scope.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.RecordingScopeAttribute">
      <summary>
            Custom attribute that, when applied to a method, defines the characteristics of the <see cref="T:PostSharp.Patterns.Recording.RecordingScope" /> that corresponds
            to the target method.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecordingScopeAttribute.#ctor(PostSharp.Patterns.Recording.RecordingScopeOption)">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.RecordingScopeAttribute" />.
            </summary>
      <param name="option">Scope options. Typically <see cref="F:PostSharp.Patterns.Recording.RecordingScopeOption.Atomic" /> or <see cref="F:PostSharp.Patterns.Recording.RecordingScopeOption.Skip" />.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RecordingScopeAttribute.#ctor(System.String,PostSharp.Patterns.Recording.RecordingScopeOption)">
      <summary>
            Initializes a new instance of the <see cref="T:PostSharp.Patterns.Recording.RecordingScopeAttribute" /> class and specify the scope name.
            </summary>
      <param name="name">The scope name, or <c>null</c>.</param>
      <param name="option">Scope options.</param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RecordingScopeAttribute.Name">
      <summary>
            Gets the scope name.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RecordingScopeAttribute.Option">
      <summary>
            Gets the scope option.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.RecordingScopeOption">
      <summary>
            Enumerates the kinds of recording scope.
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.RecordingScopeOption.Default">
      <summary>
            For declarative scopes, a <see cref="T:PostSharp.Patterns.Recording.RecordingScope" /> is automatically opened for the first public method of a recordable object on the call stack.
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.RecordingScopeOption.Skip">
      <summary>
            Prevents a <see cref="T:PostSharp.Patterns.Recording.RecordingScope" /> to be automatically opened for the target method. Cannot be used with <see cref="M:PostSharp.Patterns.Recording.Recorder.OpenScope(PostSharp.Patterns.Recording.RecordingScopeOption)" />.
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.RecordingScopeOption.Atomic">
      <summary>
            Causes changes in the <see cref="T:PostSharp.Patterns.Recording.RecordingScope" /> to be rolled back if the scope execution is not successful. In case of declarative scope (<see cref="T:PostSharp.Patterns.Recording.RecordingScopeAttribute" />), 
            it means that changes done by the method will be rolled back if the method results in an exception. For imperative scopes (<see cref="M:PostSharp.Patterns.Recording.Recorder.OpenScope(PostSharp.Patterns.Recording.RecordingScopeOption)" />,
            the changes will be rolled back if the scope is disposed by the <see cref="M:PostSharp.Patterns.Recording.RecordingScope.Dispose" /> method without previous call to the <see cref="M:PostSharp.Patterns.Recording.RecordingScope.Complete" /> method.
            Unlike normal scopes, atomic scopes are nested. However, only the top scope can be seen in the <see cref="P:PostSharp.Patterns.Recording.Recorder.UndoOperations" /> and <see cref="P:PostSharp.Patterns.Recording.Recorder.RedoOperations" /> collections.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.RecordingServices">
      <summary>
            Provides global methods to work with the <c>PostSharp.Patterns.Recording</c> namespace.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RecordingServices.DefaultRecorder">
      <summary>
            Gets the global default <see cref="T:PostSharp.Patterns.Recording.Recorder" />.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RecordingServices.OperationFormatter">
      <summary>
            Gets or sets the <see cref="T:PostSharp.Patterns.Recording.OperationFormatter" />, which provides human-readable descriptions of operations.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RecordingServices.RecorderProvider">
      <summary>
            Gets or sets the <see cref="T:PostSharp.Patterns.Recording.RecorderProvider" />, which provides the default <see cref="T:PostSharp.Patterns.Recording.Recorder" /> for recordable objects
            that have the <see cref="P:PostSharp.Patterns.Recording.RecordableAttribute.AutoRecord" /> property set to <c>true</c> (which is the default value).
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.ReplayContext">
      <summary>
            Represents the context of an undo or redo operation. The class gives access to system-defined and user-defined pieces of information.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.ReplayContext.CustomContext">
      <summary>
            Gets a dictionary that user code can use to store arbitrary pieces of information.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.ReplayContext.Success">
      <summary>
            Determines whether the operation was successful. This flag is set only in the <see cref="M:PostSharp.Patterns.Recording.IRecordableCallback.OnReplayed(PostSharp.Patterns.Recording.ReplayKind,PostSharp.Patterns.Recording.ReplayContext)" /> method.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.ReplayKind">
      <summary>
            Enumerates the kind of situations in which the <see cref="M:PostSharp.Patterns.Recording.IRecordableCallback.OnReplaying(PostSharp.Patterns.Recording.ReplayKind,PostSharp.Patterns.Recording.ReplayContext)" /> or <see cref="M:PostSharp.Patterns.Recording.IRecordableCallback.OnReplayed(PostSharp.Patterns.Recording.ReplayKind,PostSharp.Patterns.Recording.ReplayContext)" />
            methods are invoked.
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.ReplayKind.Undo">
      <summary>
            Undo operation.
            </summary>
    </member>
    <member name="F:PostSharp.Patterns.Recording.ReplayKind.Redo">
      <summary>
            Redo operation.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.RestorePoint">
      <summary>
            Represents a point to which operations can be undone or redone. A <see cref="T:PostSharp.Patterns.Recording.RestorePoint" /> is a pseudo-<see cref="T:PostSharp.Patterns.Recording.Operation" />
            that does not represent any change.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RestorePoint.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RestorePoint.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RestorePoint.Remove">
      <summary>
            Removes the current <see cref="T:PostSharp.Patterns.Recording.RestorePoint" /> from the <see cref="P:PostSharp.Patterns.Recording.Recorder.UndoOperations" /> or <see cref="P:PostSharp.Patterns.Recording.Recorder.RedoOperations" />.
            </summary>
      <returns>
        <c>true</c> if the <see cref="T:PostSharp.Patterns.Recording.RestorePoint" /> was removed, <c>false</c> if it was not present in these collections.</returns>
    </member>
    <member name="P:PostSharp.Patterns.Recording.RestorePoint.RestorePointName">
      <summary>
            Gets the name of the current <see cref="T:PostSharp.Patterns.Recording.RestorePoint" />.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RestorePoint.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.RestorePoint.VisitAffectedObjects(System.Action{System.Object})">
      <summary>
            Executes a given action on all recordable objects involved with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:PostSharp.Patterns.Recording.RestorePoint.VisitAffectedObjects(System.Action{System.Object})"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.AddCollectionItemOperation`1">
      <summary>
            Represents a <see cref="M:PostSharp.Patterns.Collections.AdvisableCollection`1.Add(`0)" /> or <see cref="M:PostSharp.Patterns.Collections.AdvisableCollection`1.Insert(System.Int32,`0)" /> operation.
            </summary>
      <typeparam name="T">Type of collection items.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.AddCollectionItemOperation`1.NewIndex">
      <summary>
            Gets the index after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.AddCollectionItemOperation`1.NewItem">
      <summary>
            Gets the item before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.AddCollectionItemOperation`1.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.AddCollectionItemOperation`1.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.AddCollectionItemOperation`1.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.AddDictionaryItemOperation`2">
      <summary>
            Represents a <see cref="M:PostSharp.Patterns.Collections.AdvisableDictionary`2.Add(`0,`1)" /> operation.
            </summary>
      <typeparam name="TKey">Type of dictionary keys.</typeparam>
      <typeparam name="TValue">Type of dictionary values.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.AddDictionaryItemOperation`2.Key">
      <summary>
            Gets the key of the dictionary entry affected by the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.AddDictionaryItemOperation`2.NewValue">
      <summary>
            Gets the value of the dictionary entry after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.AddDictionaryItemOperation`2.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.AddDictionaryItemOperation`2.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.AddDictionaryItemOperation`2.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.AttachObjectToRecorderOperation">
      <summary>
            Encapsulates the <see cref="M:PostSharp.Patterns.Recording.Recorder.Attach(System.Object)" /> operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.AttachObjectToRecorderOperation.Object">
      <summary>
            Gets the object being attached to the <see cref="T:PostSharp.Patterns.Recording.Recorder" />.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.AttachObjectToRecorderOperation.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.AttachObjectToRecorderOperation.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.AttachObjectToRecorderOperation.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.ClearCollectionOperation`1">
      <summary>
            Represents the <see cref="M:PostSharp.Patterns.Collections.AdvisableCollection`1.Clear" /> operation.
            </summary>
      <typeparam name="T">Type of items in the collection.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ClearCollectionOperation`1.OldItems">
      <summary>
            Gets the items that were in the collection before it was cleared.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ClearCollectionOperation`1.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.ClearCollectionOperation`1.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.ClearCollectionOperation`1.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.ClearDictionaryOperation`2">
      <summary>
            Represents the <see cref="T:PostSharp.Patterns.Collections.AdvisableDictionary`2" /> operation.
            </summary>
      <typeparam name="TKey">Type of keys.</typeparam>
      <typeparam name="TValue">Type of values.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ClearDictionaryOperation`2.OldEntries">
      <summary>
            Gets the items that were in the dictionary before it was cleared.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ClearDictionaryOperation`2.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.ClearDictionaryOperation`2.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.ClearDictionaryOperation`2.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.CollectionOperation`1">
      <summary>
            Base class for operations on an <see cref="T:PostSharp.Patterns.Collections.AdvisableCollection`1" />.
            </summary>
      <typeparam name="T">Type of collection items.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.CollectionOperation`1.Collection">
      <summary>
            Gets the collection on which the operation was performed.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.CollectionOperation`1.NewIndex">
      <summary>
            Gets the index after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.CollectionOperation`1.NewItem">
      <summary>
            Gets the item before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.CollectionOperation`1.OldIndex">
      <summary>
            Gets the index before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.CollectionOperation`1.OldItem">
      <summary>
            Gets the item after the operation.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.CollectionOperation`1.VisitAffectedObjects(System.Action{System.Object})">
      <summary>
            Executes a given action on all recordable objects involved with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:PostSharp.Patterns.Recording.Operations.CollectionOperation`1.VisitAffectedObjects(System.Action{System.Object})"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.CompositeOperation">
      <summary>
            Represents an <see cref="T:PostSharp.Patterns.Recording.Operation" /> composed of other sub-operations.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.CompositeOperation.OperationDescriptor">
      <summary>
            Gets the <see cref="T:PostSharp.Patterns.Recording.Operations.IOperationDescriptor" />, which is used by the <see cref="T:PostSharp.Patterns.Recording.OperationFormatter" /> to produce a human-readable description
            of the current operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.CompositeOperation.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.CompositeOperation.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.CompositeOperation.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.CompositeOperation.VisitAffectedObjects(System.Action{System.Object})">
      <summary>
            Executes a given action on all recordable objects involved with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:PostSharp.Patterns.Recording.Operations.CompositeOperation.VisitAffectedObjects(System.Action{System.Object})"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.DetachObjectFromRecorderOperation">
      <summary>
            Encapsulates the <see cref="M:PostSharp.Patterns.Recording.Recorder.Detach(System.Object)" /> operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.DetachObjectFromRecorderOperation.Object">
      <summary>
            Gets the object being attached to the <see cref="T:PostSharp.Patterns.Recording.Recorder" />.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.DetachObjectFromRecorderOperation.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.DetachObjectFromRecorderOperation.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.DetachObjectFromRecorderOperation.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.DictionaryOperation`2">
      <summary>
            Base class for operations on an <see cref="T:PostSharp.Patterns.Collections.AdvisableDictionary`2" />.
            </summary>
      <typeparam name="TKey">Type of keys.</typeparam>
      <typeparam name="TValue">Type of values.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.DictionaryOperation`2.Dictionary">
      <summary>
            Gets the collection on which the operation was performed.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.DictionaryOperation`2.Key">
      <summary>
            Gets the key of the dictionary entry affected by the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.DictionaryOperation`2.NewValue">
      <summary>
            Gets the value of the dictionary entry after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.DictionaryOperation`2.OldValue">
      <summary>
            Gets the value of the dictionary entry before the operation.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.DictionaryOperation`2.VisitAffectedObjects(System.Action{System.Object})">
      <summary>
            Executes a given action on all recordable objects involved with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:PostSharp.Patterns.Recording.Operations.DictionaryOperation`2.VisitAffectedObjects(System.Action{System.Object})"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.FieldOperation`1">
      <summary>
            Encapsulates a modification of a field value.
            </summary>
      <typeparam name="T">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "T:PostSharp.Patterns.Recording.Operations.FieldOperation`1"]</p>
      </typeparam>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.FieldOperation`1.GetMergeStatus(PostSharp.Patterns.Recording.Operation)">
      <summary>
            Determines how a given <see cref="T:PostSharp.Patterns.Recording.Operation" /> can be merged with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="subsequent">The subsequent <see cref="T:PostSharp.Patterns.Recording.Operation" /> to be merged with the current one.</param>
      <returns>A <see cref="T:PostSharp.Patterns.Recording.MergeStatus" />.</returns>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.FieldOperation`1.Location">
      <summary>
            Gets the <see cref="T:PostSharp.Reflection.LocationInfo" /> of the modified field.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.FieldOperation`1.Merge(PostSharp.Patterns.Recording.Operation)">
      <summary>
            Merges a given <see cref="T:PostSharp.Patterns.Recording.Operation" /> into the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="subsequent">The <see cref="T:PostSharp.Patterns.Recording.Operation" /> to merge into the current one.</param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.FieldOperation`1.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.FieldOperation`1.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.FieldOperation`1.Target">
      <summary>
            Gets the <c>this</c> instance.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.FieldOperation`1.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.FieldOperation`1.VisitAffectedObjects(System.Action{System.Object})">
      <summary>
            Executes a given action on all recordable objects involved with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:PostSharp.Patterns.Recording.Operations.FieldOperation`1.VisitAffectedObjects(System.Action{System.Object})"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.ICollectionOperation">
      <summary>
            Weakly-typed interface for the <see cref="T:PostSharp.Patterns.Recording.Operations.CollectionOperation`1" /> class.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ICollectionOperation.Collection">
      <summary>
            Gets the collection on which the operation was performed.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ICollectionOperation.NewIndex">
      <summary>
            Gets the index after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ICollectionOperation.NewItem">
      <summary>
            Gets the item after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ICollectionOperation.OldIndex">
      <summary>
            Gets the index before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.ICollectionOperation.OldItem">
      <summary>
            Gets the item before the operation.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.IDictionaryOperation">
      <summary>
            Weakly-typed interface for the <see cref="T:PostSharp.Patterns.Recording.Operations.DictionaryOperation`2" /> class.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IDictionaryOperation.Dictionary">
      <summary>
            Gets the collection on which the operation was performed.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IDictionaryOperation.Key">
      <summary>
            Gets the key of the dictionary entry affected by the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IDictionaryOperation.NewValue">
      <summary>
            Gets the value of the dictionary entry after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IDictionaryOperation.OldValue">
      <summary>
            Gets the value of the dictionary entry before the operation.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.IFieldOperation">
      <summary>
            Weakly-typed interface for <see cref="T:PostSharp.Patterns.Recording.Operations.FieldOperation`1" />.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IFieldOperation.Location">
      <summary>
            Gets the <see cref="T:PostSharp.Reflection.LocationInfo" /> of the modified field.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IFieldOperation.NewValue">
      <summary>
            Gets the value of the field after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IFieldOperation.OldValue">
      <summary>
            Gets the value of the field before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IFieldOperation.Target">
      <summary>
            Gets the <c>this</c> instance.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.IOperationDescriptor">
      <summary>
            Encapsulates information that allow implementations of the <see cref="T:PostSharp.Patterns.Recording.OperationFormatter" /> class to provide
            a human-readable description of an <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.IOperationDescriptor.OperationKind">
      <summary>
            Gets the kind of operation.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor">
      <summary>
            Represents a call to a method in user code.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor.Arguments">
      <summary>
            Gets the method arguments.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor.Method">
      <summary>
            Gets the executed method.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor.MethodName">
      <summary>
            Gets the name of the method. This property is set even if the <see cref="P:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor.Method" /> property is <c>null</c>.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor.OperationKind">
      <summary>
            Gets the kind of operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.MethodExecutionOperationDescriptor.Target">
      <summary>
            Gets the <c>this</c> instance.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.NamedOperationDescriptor">
      <summary>
            Represents an operation whose named has been set declaratively or imperatively.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.NamedOperationDescriptor.#ctor(System.String)">
      <summary>
            Initializes a new <see cref="T:PostSharp.Patterns.Recording.Operations.NamedOperationDescriptor" />.
            </summary>
      <param name="name">The operation name.</param>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.NamedOperationDescriptor.Name">
      <summary>
            Gets the operation name.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.NamedOperationDescriptor.OperationKind">
      <summary>
            Gets the kind of operation.
            </summary>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.RecorderOperation">
      <summary>
            An <see cref="T:PostSharp.Patterns.Recording.Operation" /> on a <see cref="P:PostSharp.Patterns.Recording.Operations.RecorderOperation.Recorder" />, specifically a base class for
            <see cref="T:PostSharp.Patterns.Recording.Operations.AttachObjectToRecorderOperation" /> and <see cref="T:PostSharp.Patterns.Recording.Operations.DetachObjectFromRecorderOperation" />.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.RecorderOperation.Recorder">
      <summary>
            Gets the <see cref="P:PostSharp.Patterns.Recording.Operations.RecorderOperation.Recorder" /> to which the current <see cref="T:PostSharp.Patterns.Recording.Operation" /> relates.
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.RecorderOperation.VisitAffectedObjects(System.Action{System.Object})">
      <summary>
            Executes a given action on all recordable objects involved with the current <see cref="T:PostSharp.Patterns.Recording.Operation" />.
            </summary>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:PostSharp.Patterns.Recording.Operations.RecorderOperation.VisitAffectedObjects(System.Action{System.Object})"]</p>
      </param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.RemoveCollectionItemOperation`1">
      <summary>
            Represents a <see cref="M:PostSharp.Patterns.Collections.AdvisableCollection`1.Remove(`0)" /> operation.
            </summary>
      <typeparam name="T">Type of collection items.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.RemoveCollectionItemOperation`1.OldIndex">
      <summary>
            Gets the index before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.RemoveCollectionItemOperation`1.OldItem">
      <summary>
            Gets the item after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.RemoveCollectionItemOperation`1.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.RemoveCollectionItemOperation`1.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.RemoveCollectionItemOperation`1.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.RemoveDictionaryItemOperation`2">
      <summary>
            Represents a <see cref="M:PostSharp.Patterns.Collections.AdvisableDictionary`2.Remove(`0)" /> operation.
            </summary>
      <typeparam name="TKey">Type of dictionary keys.</typeparam>
      <typeparam name="TValue">Type of dictionary values.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.RemoveDictionaryItemOperation`2.Key">
      <summary>
            Gets the key of the dictionary entry affected by the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.RemoveDictionaryItemOperation`2.OldValue">
      <summary>
            Gets the value of the dictionary entry before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.RemoveDictionaryItemOperation`2.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.RemoveDictionaryItemOperation`2.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.RemoveDictionaryItemOperation`2.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1">
      <summary>
            Represents a <see cref="M:PostSharp.Patterns.Collections.AdvisableCollection`1.set_Item(System.Int32,`0)" /> operation.
            </summary>
      <typeparam name="T">Type of collection items.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1.NewIndex">
      <summary>
            Gets the index after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1.NewItem">
      <summary>
            Gets the item before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1.OldIndex">
      <summary>
            Gets the index before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1.OldItem">
      <summary>
            Gets the item after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.SetCollectionItemOperation`1.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="T:PostSharp.Patterns.Recording.Operations.SetDictionaryItemOperation`2">
      <summary>
            Represents a <see cref="M:PostSharp.Patterns.Collections.AdvisableDictionary`2.set_Item(`0,`1)" /> operation.
            </summary>
      <typeparam name="TKey">Type of dictionary keys.</typeparam>
      <typeparam name="TValue">Type of dictionary values.</typeparam>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetDictionaryItemOperation`2.Key">
      <summary>
            Gets the key of the dictionary entry affected by the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetDictionaryItemOperation`2.NewValue">
      <summary>
            Gets the value of the dictionary entry after the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetDictionaryItemOperation`2.OldValue">
      <summary>
            Gets the value of the dictionary entry before the operation.
            </summary>
    </member>
    <member name="P:PostSharp.Patterns.Recording.Operations.SetDictionaryItemOperation`2.OperationKind">
      <summary>
            Gets the kind of operation. 
            </summary>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.SetDictionaryItemOperation`2.Redo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Redo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
    <member name="M:PostSharp.Patterns.Recording.Operations.SetDictionaryItemOperation`2.Undo(PostSharp.Patterns.Recording.ReplayContext)">
      <summary>
            Undo the current operation.
            </summary>
      <param name="context">Reserved for future use.</param>
    </member>
  </members>
</doc>